@page "/"
@inherits FrameworkPageBase
@{
    var d = DataContext;
}
<PageTitle>ワッチャプリマジ！アイテム一覧</PageTitle>
<div class="container">
    @if (d?.IsInitialized != true)
    {
        <div>データを取得しています。</div>
    }
    else
    {
        <IndexConditions DataContext="d" />
        <div>
            <button class="btn @(d.Mode == IndexPageMode.Default ? "btn-primary" : "btn-outline-primary")"
                @onclick="@(() => d.Mode = IndexPageMode.Default)">
                アイコン
            </button>
            <button class="btn @(d.Mode == IndexPageMode.Table ? "btn-primary" : "btn-outline-primary")"
                @onclick="@(() => d.Mode = IndexPageMode.Table)">
                一覧
            </button>
            <button class="btn @(d.Mode == IndexPageMode.Summary ? "btn-primary" : "btn-outline-primary")"
                @onclick="@(() => d.Mode = IndexPageMode.Summary)">
                サマリー
            </button>
            <Checkbox @bind-IsChecked="d.HidesSpoiler">
                ネタバレ非表示
            </Checkbox>
        </div>
        <IndexItemView DataContext="d" />
        <IndexTableView DataContext="d" />
        <IndexSummaryView DataContext="d" />
    }
</div>
@code
{
    protected override bool ImplicitRender => false;

    [Inject]
    public HttpClient? Http { get; set; }

    public new IndexPageViewModel DataContext => (IndexPageViewModel)base.DataContext;

    protected override FrameworkPageViewModel GetOrCreateDataContext()
        => base.DataContext as IndexPageViewModel ?? new IndexPageViewModel(this);

}